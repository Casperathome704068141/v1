rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function signedIn() { return request.auth != null; }
    function isAdmin() { return signedIn() && request.auth.token.role == 'admin'; }
    function isStaff() { return signedIn() && (request.auth.token.role == 'staff' || isAdmin()); }

    match /uploads/users/{uid}/{allPaths=**} {
      allow read: if isAdmin() || isStaff() || (signedIn() && request.auth.uid == uid);
      allow write, delete: if signedIn() && request.auth.uid == uid;
    }

    match /uploads/applications/{appId}/{allPaths=**} {
      allow read: if isAdmin() || isStaff() ||
        (signedIn() &&
          get(/databases/$(database)/documents/applications/$(appId)).data.userId == request.auth.uid);
      allow write, delete: if isAdmin() || isStaff() ||
        (signedIn() &&
          get(/databases/$(database)/documents/applications/$(appId)).data.userId == request.auth.uid);
    }

    match /{allPaths=**} { allow read, write: if false; }
  }
}

