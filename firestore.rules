rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth.token.admin == true;
    }

    match /users/{userId}/{path=**} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    match /applications/{applicationId} {
      allow read, update, delete: if isAdmin();
    }

    match /appointments/{appointmentId} {
      // Allow creation if the user is authenticated, the data is for them,
      // and all required fields are present with correct types.
      // The createdAt check is the key fix here.
      allow create: if request.auth.uid != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.userName is string
        && request.resource.data.userEmail is string
        && request.resource.data.requestedDate is string
        && request.resource.data.requestedTime is string
        && request.resource.data.topic is string
        && request.resource.data.status == "pending"
        && request.resource.data.createdAt == request.time; // Use request.time to validate a server timestamp

      // Allow users to read their own appointments, and admins to read any.
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      
      // Only admins can update (confirm/decline) or delete appointments.
      allow update, delete: if isAdmin();
    }

    match /settings/{docId} {
      allow read, write: if isAdmin();
    }

    match /news/{docId} {
      // Anyone can read news
      allow read: if true;
      // Only admins can create/edit news
      allow write: if isAdmin();
    }

    // This rule allows admins to perform collection group queries on all 'application' subcollections.
    // This is necessary for the "Manage Applications" page to view both drafts and submitted apps.
    match /{path=**}/application/{applicationId} {
       allow read: if isAdmin();
    }
  }
}
