
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    // Users can only read/write their own data. Admins can read/write any user data.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();

      // Subcollections for users
      match /application/{docId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /quizResults/{resultId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /payments/{paymentId} {
        allow read: if request.auth.uid == userId || isAdmin();
        // Prevent users from creating their own payment records
        allow create: if false;
      }
      match /messages/{messageId} {
        allow read, create: if request.auth.uid == userId || isAdmin();
      }
      match /auditLogs/{logId} {
        allow read, create: if request.auth.uid == userId || isAdmin();
      }
    }

    // Submitted applications can be read by the user who owns it and any admin.
    // Only admins can create, update, or delete them.
    match /applications/{appId} {
      allow read: if resource.data.userId == request.auth.uid || isAdmin();
      allow create, update, delete: if isAdmin();

      // The status history subcollection needs to inherit read access from its parent.
      match /statusHistory/{historyId} {
        allow read: if get(/databases/$(database)/documents/applications/$(appId)).data.userId == request.auth.uid || isAdmin();
        allow create, update, delete: if isAdmin();
      }
    }

    // Appointments can be created by any authenticated user.
    // They can only be read or updated by the user who created them or an admin.
    match /appointments/{appointmentId} {
      allow create: if request.auth.uid != null;
      allow read, update, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    // News articles can be read by anyone, but only written by admins.
    match /news/{newsId} {
      allow get: if true;
      allow list, create, update, delete: if isAdmin();
    }

    // Forum posts can be created and read by any authenticated user.
    // Only admins can delete posts.
    match /forumPosts/{postId} {
        allow read, create: if request.auth.uid != null;
        allow update, delete: if isAdmin();
    }

    // Learning hub content can be read by anyone, but only written by admins.
    match /learningHub/{docId} {
       allow get: if true;
       allow list, create, update, delete: if isAdmin();
    }

    // General platform settings can be read by anyone, written by admin.
    match /settings/general {
        allow get: if true;
        allow create, update, delete: if isAdmin();
    }
  }
}
