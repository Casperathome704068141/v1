rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users can read and write their own data. Admins can read/write any user's data.
    match /users/{userId}/{documents=**} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    // Submitted applications can only be accessed by admins.
    match /applications/{appId} {
        allow read, update, delete: if isAdmin();
    }

    // Appointments can be created by the user, but only managed by admins.
    match /appointments/{appointmentId} {
      // Any authenticated user can create an appointment for themselves.
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      // A user can read their own appointment, and an admin can read any appointment.
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      // Only admins can update (confirm/decline) or delete appointments.
      allow update, delete: if isAdmin();
    }

    // Settings can be read by any authenticated user (e.g., for available times)
    // but only written to by admins.
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // News can be read by anyone, but only written by admins.
    match /news/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Admins need to query the 'application' collection group to see all applications.
    match /{path=**}/application/{appId} {
      allow read: if isAdmin();
    }
  }
}