rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users can read and write their own profile data.
    // Admins can read any user's profile.
    match /users/{userId} {
      // Users can read and write their own profile; admins can read any profile.
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;

      // Users can manage their own draft. Admins can read any document.
      match /application/{appId} {
        // Allow users to manage their own draft and admins to read any draft.
        allow read: if (request.auth.uid == userId && appId == 'draft') || isAdmin();
        allow write: if request.auth.uid == userId && appId == 'draft';
      }
      
      // Users can write to their own payments subcollection. Admins can read.
      match /payments/{paymentId} {
        allow write: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || isAdmin();
      }
      
      // Users can write their own quiz results. Admins can read.
       match /quizResults/{quizId} {
        allow write: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Admins can read and write all applications.
    // Users can read their own application.
    match /applications/{applicationId} {
      // Admins can do everything.
      allow read, write: if isAdmin();
      
      // Users can get their own application document.
      allow get: if request.auth.uid == resource.data.userId;
      
      // Users can create an application.
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // Rules for the statusHistory sub-collection
      match /statusHistory/{historyId} {
        // Users can read the status history of their own application.
        // Admins can read any status history.
        allow read: if request.auth.uid == get(/databases/$(database)/documents/applications/$(applicationId)).data.userId || isAdmin();
        // Only admins can write to status history.
        allow write: if isAdmin();
      }
    }
    
    // Only admins can manage appointments.
    // Authenticated users can create appointments.
    match /appointments/{appointmentId} {
       allow create: if request.auth.uid != null;
       allow read, write: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    // Any authenticated user can read news.
    // Only admins can write news.
    match /news/{newsId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Anyone can read general settings (for maintenance mode).
    // Only admins can write settings.
    match /settings/general {
        allow get: if true;
        allow write: if isAdmin();
    }
  }
}
