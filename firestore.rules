rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // USER DATA
    match /users/{userId}/{path=**} {
      // Users can read and write their own data. Admins can read anyone's data.
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // APPLICATIONS
    match /applications/{appId} {
      allow read, update: if isAdmin();
    }
    
    match /users/{userId}/application/{appId} {
        allow read, write: if request.auth.uid == userId;
        allow read: if isAdmin();
    }
    
    // APPOINTMENTS
    match /appointments/{appointmentId} {
      // Any authenticated user can create their own appointment request.
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;

      // A user can read their own appointment. Admins can also read any single appointment.
      allow get: if request.auth.uid == resource.data.userId || isAdmin();

      // Only admins can list all appointments. This fixes the error on the admin page.
      allow list: if isAdmin();
      
      // Only admins can update (confirm/decline) or delete appointments.
      allow update, delete: if isAdmin();
    }
    
    // SETTINGS
    match /settings/{docId} {
      // Any authenticated user can read settings (like available times).
      allow read: if request.auth != null;
      // Only admins can write settings.
      allow write: if isAdmin();
    }

    // NEWS & ANNOUNCEMENTS
    match /news/{docId} {
      // Anyone can read news.
      allow read;
      // Only admins can create/update news.
      allow write: if isAdmin();
    }

    // DENY ALL OTHER ACCESS
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
