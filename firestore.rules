rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Rules for users collection and their sub-collections (including application drafts)
    match /users/{userId}/{document=**} {
      // User can read and write to their own documents. Admin has full access.
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // Rules for the top-level 'applications' collection (submitted applications)
    match /applications/{applicationId} {
      // Logged-in users can create an application for themselves
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      // Admins can read, update, and delete any submitted application
      allow read, update, delete: if isAdmin();
    }
    
    // Rules for the 'statusHistory' sub-collection within each application
    match /applications/{applicationId}/statusHistory/{historyId} {
        // The user who owns the application can read their own status history
        allow read: if request.auth.uid == get(/databases/$(database)/documents/applications/$(applicationId)).data.userId || isAdmin();
        // Only admins can create new status history entries
        allow create: if isAdmin();
    }

    // Rules for appointments
    match /appointments/{appointmentId} {
      // Allow authenticated users to create appointments for themselves
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      // Allow users to read their own appointments, and admins to read all
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      // Only admins can update or delete appointments
      allow update, delete: if isAdmin();
    }
    
    // Rules for app-wide settings (e.g., maintenance mode)
    match /settings/{docId} {
      allow read: if true; // All users can read settings
      allow write: if isAdmin(); // Only admins can change settings
    }
    
    // Rules for news/CMS posts
    match /news/{newsId} {
        allow read: if true; // All users can read news
        allow write: if isAdmin(); // Only admins can create/edit news
    }
  }
}
